<div class="likert-scale">
    <div class="likert-buttons">
        @foreach (var option in likertOptions)
        {
            <div class="likert-button" @onclick="() => OnValueChange(option.OptionIdProperty)">
                @option.OptionTextProperty
            </div>
        }
    </div>
</div>

@code {
    [Parameter]
    public int SelectedOption { get; set; }

    [Parameter]
    public EventCallback<int> SelectedOptionChanged { get; set; }

    private List<LikertOption> likertOptions = new List<LikertOption>
    {
        new LikertOption { OptionIdProperty = 1, OptionTextProperty = "Disagree" },
        new LikertOption { OptionIdProperty = 2, OptionTextProperty = "Somewhat Disagree" },
        new LikertOption { OptionIdProperty = 3, OptionTextProperty = "Neutral" },
        new LikertOption { OptionIdProperty = 4, OptionTextProperty = "Somewhat Agree" },
        new LikertOption { OptionIdProperty = 5, OptionTextProperty = "Agree" },
    };

    private class LikertOption
    {
        public int OptionIdProperty { get; set; }
        public string OptionTextProperty { get; set; }
    }

    private async Task OnValueChange(int selectedOption)
    {
        SelectedOption = selectedOption;
        await SelectedOptionChanged.InvokeAsync(selectedOption);
    }

    private bool IsOptionSelected(int optionId)
    {
        return optionId == SelectedOption;
    }
}

<style>
    .likert-scale {
        display: flex;
        flex-direction: column;
    }

    .likert-buttons {
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .likert-button {
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #e0e0e0;
        padding: 8px;
        border-radius: 4px;
        cursor: pointer;
    }
</style>
